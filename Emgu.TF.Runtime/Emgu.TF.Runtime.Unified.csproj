<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{64306FF5-1E98-4D18-9CA7-666CD2D0F642}</ProjectGuid>
    <ProjectTypeGuids>{A3F8F2AB-B479-4A4A-A458-A89E7DC349F1};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <OutputType>Library</OutputType>
    <RootNamespace>Emgu.TF</RootNamespace>
    <AssemblyName>Emgu.TF.Runtime.Mac</AssemblyName>
    <TargetFrameworkVersion>v2.0</TargetFrameworkVersion>
    <TargetFrameworkIdentifier>Xamarin.Mac</TargetFrameworkIdentifier>
    <MonoMacResourcePrefix>Resources</MonoMacResourcePrefix>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>..\lib\Build\Runtime.Mac.$(Platform)\$(Configuration)\</OutputPath>
    <DefineConstants>DEBUG;</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <DocumentationFile>$(OutputPath)\$(AssemblyName).xml</DocumentationFile>
    <EnableCodeSigning>false</EnableCodeSigning>
    <CreatePackage>false</CreatePackage>
    <EnablePackageSigning>false</EnablePackageSigning>
    <IncludeMonoRuntime>false</IncludeMonoRuntime>
    <UseSGen>false</UseSGen>
    <HttpClientHandler>
    </HttpClientHandler>
    <LinkMode>
    </LinkMode>
    <XamMacArch>
    </XamMacArch>
    <AOTMode>None</AOTMode>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <Optimize>true</Optimize>
    <OutputPath>..\lib\Build\Runtime.Mac.$(Platform)\$(Configuration)\</OutputPath>
    <DefineConstants>
    </DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <DocumentationFile>$(OutputPath)\$(AssemblyName).xml</DocumentationFile>
    <EnableCodeSigning>false</EnableCodeSigning>
    <CreatePackage>false</CreatePackage>
    <EnablePackageSigning>false</EnablePackageSigning>
    <IncludeMonoRuntime>false</IncludeMonoRuntime>
    <UseSGen>false</UseSGen>
    <HttpClientHandler>
    </HttpClientHandler>
    <LinkMode>
    </LinkMode>
    <XamMacArch>
    </XamMacArch>
    <AOTMode>None</AOTMode>
  </PropertyGroup>
  <PropertyGroup>
    <SignAssembly>true</SignAssembly>
  </PropertyGroup>
  <PropertyGroup>
    <AssemblyOriginatorKeyFile>..\Emgu.TF.snk</AssemblyOriginatorKeyFile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|x64' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>..\lib\Build\Runtime.Mac.$(Platform)\$(Configuration)\</OutputPath>
    <DefineConstants>
    </DefineConstants>
    <WarningLevel>4</WarningLevel>
	<DocumentationFile>$(OutputPath)\$(AssemblyName).xml</DocumentationFile>
    <IncludeMonoRuntime>false</IncludeMonoRuntime>
    <UseSGen>false</UseSGen>
    <XamMacArch>
    </XamMacArch>
    <SignAssembly>false</SignAssembly>
    <AssemblyOriginatorKeyFile>
    </AssemblyOriginatorKeyFile>
    <PlatformTarget>x64</PlatformTarget>
    <AOTMode>None</AOTMode>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|x64' ">
    <UseSGen>false</UseSGen>
    <AOTMode>None</AOTMode>
  </PropertyGroup>
  <PropertyGroup>
    <TFBinaryDir>$(MSBuildThisFileDirectory)..\lib</TFBinaryDir>
    <EmguTFDir>$(MSBuildThisFileDirectory)</EmguTFDir>
  </PropertyGroup>
  <PropertyGroup>
    <EmguTFLinkTarget>Xamarin.Mac</EmguTFLinkTarget>
    <EmguTFNativeFile>$(MSBuildThisFileDirectory)..\lib\osx\libtfextern.dylib</EmguTFNativeFile>
    <EmguTFNativeFile2>$(MSBuildThisFileDirectory)..\lib\osx\libtensorflow_framework.dylib</EmguTFNativeFile2>
    <EmguTFErrorMessage Condition="!Exists('$(EmguTFNativeFile)')"> This package do not contain necessary binary for $(EmguTFLinkTarget). Emgu TF for Mac Commercial License is required. Missing $(EmguTFNativeFile) </EmguTFErrorMessage>
    <EmguTFDeployMessage Condition="Exists('$(EmguTFNativeFile)')">$(EmguTFDeployMessage)mac </EmguTFDeployMessage>
  </PropertyGroup>
  <ItemGroup>
    <NativeReference Include="$(EmguTFNativeFile)">
      <Kind>Dynamic</Kind>
      <SmartLink>False</SmartLink>
    </NativeReference>
    <NativeReference Include="$(EmguTFNativeFile2)">
      <Kind>Dynamic</Kind>
      <SmartLink>False</SmartLink>
    </NativeReference>
  </ItemGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Xml" />
    <Reference Include="System.Xml.Linq" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="..\CommonAssemblyInfo.cs">
      <Link>CommonAssemblyInfo.cs</Link>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Emgu.TF\Emgu.TF.Netstandard\Emgu.TF.Netstandard.csproj">
      <Project>{f644aa6a-5e39-4dae-9bad-6ddbe3335a74}</Project>
      <Name>Emgu.TF.Netstandard</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(MSBuildExtensionsPath)\Xamarin\Mac\Xamarin.Mac.CSharp.targets" />
  <Target Name="EmguTFPackageBuildImports" BeforeTargets="PrepareForBuild">
    <!-- <Error Condition="'$(EmguTFLinkTarget)'==''" Text="Emgu TF is not able to detect the project type, please use the pre-compiled Emgu.TF.World dll or send a bug report to support@emgu.com" /> -->
    <Message Condition="'$(EmguTFLinkTarget)'!=''" Text="Emgu TF shared project compiling against $(EmguTFLinkTarget)" Importance="High" />
    <Error Text="'$(EmguTFErrorMessage)'" Condition="'$(EmguTFErrorMessage)'!=''" />
    <Message Text="Emgu TF Compiling with $(EmguTFDeployMessage)binary" Condition="'$(EmguTFDeployMessage)'!=''" Importance="High" />
    <Message Text="No native binary is deployed by the Emgu.TF shared project." Condition="'$(EmguTFDeployMessage)'==''" Importance="High" />
  </Target>
  <Target Name="AfterBuild">
    <Message Text="Copying $(OutputPath)$(AssemblyName).dll, $(OutputPath)$(AssemblyName).xml to ..\lib" Importance="high" />
    <Copy SourceFiles="$(OutputPath)$(AssemblyName).dll" DestinationFolder="..\lib" ContinueOnError="true" />
    <Copy SourceFiles="$(OutputPath)$(AssemblyName).xml" DestinationFolder="..\lib" ContinueOnError="true" />
  </Target>
</Project>