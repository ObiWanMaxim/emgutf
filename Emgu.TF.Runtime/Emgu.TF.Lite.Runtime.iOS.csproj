<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{A14504ED-D613-43D1-AD3D-AE3F411C51CE}</ProjectGuid>
    <ProjectTypeGuids>{8FFB629D-F513-41CE-95D2-7ECE97B6EEEC};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <OutputType>Library</OutputType>
    <RootNamespace>Emgu.TF.Lite</RootNamespace>
    <AssemblyName>Emgu.TF.Lite.Runtime.iOS</AssemblyName>
    <IPhoneResourcePrefix>Resources</IPhoneResourcePrefix>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>..\lib\Build\Runtime.iOS.$(Platform)\$(Configuration)\</OutputPath>
    <DefineConstants>DEBUG;</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <DocumentationFile>..\lib\$(AssemblyName).xml</DocumentationFile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <Optimize>true</Optimize>
    <OutputPath>..\lib\Build\Runtime.iOS.$(Platform)\$(Configuration)\</OutputPath>
    <DefineConstants>
    </DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <DocumentationFile>..\lib\$(AssemblyName).xml</DocumentationFile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|iPhoneSimulator' ">
    <OutputPath>..\lib\Build\Runtime.iOS.$(Platform)\$(Configuration)\</OutputPath>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|ARM' ">
    <OutputPath>..\lib\Build\Runtime.iOS.$(Platform)\$(Configuration)\</OutputPath>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|ARM' ">
    <OutputPath>..\lib\Build\Runtime.iOS.$(Platform)\$(Configuration)\</OutputPath>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|iPhone' ">
    <OutputPath>..\lib\Build\Runtime.iOS.$(Platform)\$(Configuration)\</OutputPath>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|iPhone' ">
    <OutputPath>..\lib\Build\Runtime.iOS.$(Platform)\$(Configuration)\</OutputPath>
  </PropertyGroup>
  <PropertyGroup>
    <TFLiteBinaryDir>$(MSBuildThisFileDirectory)..\lib</TFLiteBinaryDir>
    <EmguTFLiteDir>$(MSBuildThisFileDirectory)</EmguTFLiteDir>
  </PropertyGroup>
        <PropertyGroup>
        <EmguTFLiteLinkTarget>Xamarin iOS Native Binding Library</EmguTFLiteLinkTarget>
        <EmguTFLiteNativeFile>$(MSBuildThisFileDirectory)..\lib\ios\libtfliteextern.a</EmguTFLiteNativeFile>
        <EmguTFLiteErrorMessage Condition="!Exists('$(EmguTFLiteNativeFile)')"> This package do not contain necessary binary for $(EmguTFLiteLinkTarget). Emgu TF Lite for iOS Commercial License is required. Missing $(EmguTFLiteNativeFile) </EmguTFLiteErrorMessage>
        <EmguTFLiteDeployMessage Condition="Exists('$(EmguTFLiteNativeFile)')">$(EmguTFLiteDeployMessage)ios </EmguTFLiteDeployMessage>
        <EmguTFLiteLinkWithFile>$(MSBuildThisFileDirectory)ios\libtfliteextern.linkwith.cs</EmguTFLiteLinkWithFile>
        <EmguTFLiteErrorMessage Condition="!Exists('$(EmguTFLiteLinkWithFile)')"> This package do not contain necessary file for $(EmguTFLiteLinkTarget). Emgu TF Lite for iOS Commercial License is required. Missing $(EmguTFLiteLinkWithFile) </EmguTFLiteErrorMessage>
      </PropertyGroup>
      <ItemGroup>
        <ObjcBindingNativeLibrary Include="$(EmguTFLiteNativeFile)" Condition="Exists('$(EmguTFLiteNativeFile)')" />
      </ItemGroup>
      <ItemGroup>
        <Compile Include="$(EmguTFLiteLinkWithFile)" Condition="Exists('$(EmguTFLiteLinkWithFile)')">
          <DependentUpon>libtfliteextern.a</DependentUpon>
        </Compile>
      </ItemGroup>
  <ItemGroup>
    <Reference Include="OpenTK-1.0" />
    <Reference Include="System" />
    <Reference Include="System.ServiceModel" />
    <Reference Include="Xamarin.iOS" />
  </ItemGroup>
  <ItemGroup>
    <ObjcBindingApiDefinition Include="ApiDefinition.cs" />
  </ItemGroup>
  <Import Project="..\Emgu.TF.Lite.Models\Emgu.TF.Lite.Models.Shared.projitems" Label="Shared" Condition="Exists('..\Emgu.TF.Lite.Models\Emgu.TF.Lite.Models.Shared.projitems')" />
  <Import Project="..\Emgu.Models\Emgu.Models.Shared.projitems" Label="Shared" Condition="Exists('..\Emgu.Models\Emgu.Models.Shared.projitems')" />
  <Import Project="..\Emgu.TF.Lite\Emgu.TF.Lite.projitems" Label="Shared" Condition="Exists('..\Emgu.TF.Lite\Emgu.TF.Lite.projitems')" />
  <Import Project="..\Emgu.TF.Util\Emgu.TF.Util.projitems" Label="Shared" Condition="Exists('..\Emgu.TF.Util\Emgu.TF.Util.projitems')" />
  <Import Project="$(MSBuildExtensionsPath)\Xamarin\iOS\Xamarin.iOS.ObjCBinding.CSharp.targets" />
  <Target Name="EmguTFLitePackageBuildImports" BeforeTargets="PrepareForBuild">
    <Message Condition="'$(EmguTFLiteLinkTarget)'!=''" Text="Emgu TF Lite shared project compiling against $(EmguTFLiteLinkTarget)" Importance="High" />
    <Error Text="'$(EmguTFLiteErrorMessage)'" Condition="'$(EmguTFLiteErrorMessage)'!=''" />
    <Message Text="Emgu TF Lite Compiling with $(EmguTFLiteDeployMessage)binary" Condition="'$(EmguTFLiteDeployMessage)'!=''" Importance="High" />
    <Message Text="No native binary is deployed by the Emgu.TF shared project." Condition="'$(EmguTFLiteDeployMessage)'==''" Importance="High" />
  </Target>
  <Target Name="AfterBuild">
    <Message Text="Copying $(OutputPath)$(AssemblyName).dll, $(OutputPath)$(AssemblyName).xml to $(TFLiteBinaryDir)" Importance="high" />
    <Copy SourceFiles="$(OutputPath)$(AssemblyName).dll" DestinationFolder="$(TFLiteBinaryDir)" ContinueOnError="true" />
    <Copy SourceFiles="$(OutputPath)$(AssemblyName).xml" DestinationFolder="$(TFLiteBinaryDir)" ContinueOnError="true" />
  </Target>
</Project>